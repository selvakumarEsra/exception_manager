{"version":3,"file":"browser.mjs","sources":["../src/matchPath.js","../src/matchRoute.js","../src/resolve.js","../src/main.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport toRegExp from 'path-to-regexp';\n\nconst cache = new Map();\n\nfunction decodeParam(val) {\n  if (!(typeof val === 'string' || val.length === 0)) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = `Failed to decode param '${val}'`;\n      err.status = 400;\n    }\n\n    throw err;\n  }\n}\n\nfunction matchPathBase(end, routePath, urlPath) {\n  const key = `${routePath}|${end}`;\n  let regexp = cache.get(key);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = { pattern: toRegExp(routePath, keys, { end }), keys };\n    cache.set(key, regexp);\n  }\n\n  const m = regexp.pattern.exec(urlPath);\n\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.create(null);\n  const path = m[0];\n\n  for (let i = 1; i < m.length; i++) {\n    params[regexp.keys[i - 1].name] = m[i] !== undefined ? decodeParam(m[i]) : undefined;\n  }\n\n  return { path: path === '' ? '/' : path, keys: regexp.keys.slice(), params };\n}\n\nexport const matchPath = matchPathBase.bind(undefined, true);\nexport const matchBasePath = matchPathBase.bind(undefined, false);\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport { matchPath, matchBasePath } from './matchPath';\n\nfunction* matchRoute(route, baseUrl, path) {\n  let match;\n\n  if (!route.children) {\n    match = matchPath(route.path, path);\n\n    if (match) {\n      yield {\n        route,\n        baseUrl,\n        path: match.path,\n        keys: match.keys,\n        params: match.params,\n      };\n    }\n  }\n\n  if (route.children) {\n    match = matchBasePath(route.path, path);\n    if (match) {\n      yield {\n        route,\n        baseUrl,\n        path: match.path,\n        keys: match.keys,\n        params: match.params,\n      };\n\n      for (const childRoute of route.children) {\n        const newPath = path.substr(match.path.length);\n        yield* matchRoute(\n          childRoute,\n          baseUrl + (match.path === '/' ? '' : match.path),\n          newPath.startsWith('/') ? newPath : `/${newPath}`\n        );\n      }\n    }\n  }\n}\n\nexport default matchRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchRoute from './matchRoute';\n\nasync function resolve(routes, pathOrContext) {\n  const context = typeof pathOrContext === 'string' || pathOrContext instanceof String\n    ? { path: pathOrContext }\n    : pathOrContext;\n  const root = Array.isArray(routes) ? { path: '/', children: routes } : routes;\n  let result;\n  let value;\n  let done = false;\n\n  const errorRoute = root.children && root.children.find(x => x.path === '/error');\n  const match = matchRoute(root, '', context.path);\n\n  async function next() {\n    ({ value, done } = match.next());\n\n    if (value && !done) {\n      const newContext = Object.assign({}, context, value);\n\n      if (value.route.action) {\n        if (errorRoute) {\n          try {\n            return await value.route.action(newContext, newContext.params);\n          } catch (err) {\n            err.status = err.status || 500;\n            newContext.error = err;\n            return errorRoute.action(newContext, newContext.params);\n          }\n        } else {\n          return await value.route.action(newContext, newContext.params);\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  context.next = next;\n  context.end = data => { result = data; done = true; };\n\n  while (!done) {\n    result = await next();\n\n    if (result !== undefined) {\n      break;\n    }\n  }\n\n  if (result === undefined && errorRoute) {\n    context.error = new Error('Not found');\n    context.error.status = 404;\n    return errorRoute.action(context, {});\n  }\n\n  return result;\n}\n\nexport default resolve;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport resolve from './resolve';\n\nexport { resolve, resolve as match /* alias */ };\nexport default { resolve, match: resolve /* alias */ };\n"],"names":[],"mappings":"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"}